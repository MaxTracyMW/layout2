<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
  <!ENTITY nl "&#10;">
  <!ENTITY nbsp "&#160;">
  <!ENTITY sq "&#x25A1;">
  ]>

<doc name="Getting Started" 
     type="GettingStarted"
     briefdescription="Introductory notes and installation instructions">
    <para>
        This chapter gives an overview of this package, including its purpose,
how to install it and any known issues at the time of release.
    </para>


<!-- ****************************************************************** -->

  <section name="What is GUI Layout Toolbox?" staticref="about">
    <keywords>About</keywords>
<P>
GUI Layout Toolbox provides a package of MATLAB objects that allow for complex
arrangement of graphical user interface elements within a figure window. The
main capabilities provided are:
<UL>
  <LI>Automatic element arrangement horizontally, vertically or in grids</LI>
  <LI>Ability to specify fixed sizes or resizing weights for each element</LI>
  <LI>Ability to "nest" layouts to produce virtually any element arrangement</LI>
  <LI>Divider bars for user-resizing of elements</LI>
</UL>
</P>
<P>
These element arrangement capabilities are designed to match those found as
standard in other user-interface toolkits such as Java Swing, GTK, QT etc.
</P>
    <P>
        Note that this is version 2 of this toolbox, designed to work with 
        MATLAB releases R2014b and later. For earlier MATLAB releases use 
        version 1.
    </P>
</section>


<!-- ****************************************************************** -->

<section name="Compatibility considerations" staticref="compatibility">
    <inlinesubsection name="Minimum MATLAB version">
        <p>A new MATLAB graphics system was introduced in R2014b.</p>
        <p>This is version 2 of GUI Layout Toolbox, designed to 
           work with MATLAB releases R2014b and later.</p>
        <p>For earlier MATLAB releases using the old MATLAB graphics system, 
           use version 1.</p>
    </inlinesubsection> 
    
    <inlinesubsection name="Compatibility with version 1">
        <p>If you are upgrading from version 1, there are a number of 
        compatibility considerations:</p>
    
<h4>Package name</h4>
<p>Version 1 packages were contained in the package "uiextras".  Version 2 classes are 
contained in the package "uix".  In version 2, a package "uiextras" is included 
to provide support for legacy code.  Classes in "uiextras" extend 
corresponding classes in "uix", and contain only compatibility-related 
code.</p>

<h4>Contents property</h4>
<p>The contents of version 1 objects were accessible via the property <code>Children</code>.  
The contents of version 2 objects are accessible via the property <code>Contents</code>.  
Version 2 objects also provide a property <code>Children</code>, but this controls the 
vertical stacking order of contents, rather than the layout order.  Legacy 
code that accesses <code>Children</code> will run without error, but will not achieve 
the desired change in layout order, and should be modified to access 
<code>Contents</code> instead.</p>

<p>An upcoming release of version 1 will include support for code that references 
contents via <code>Contents</code>.  That way, code modified to work in version 2 will also 
work in version 1.</p>

<p>The background to this change is as follows.  Version 1 objects were wrappers 
for built-in graphics objects, and presented contents in layout order via 
the property <code>Children</code>.  Version 2 objects extend built-in graphics objects, 
and as such, inherit properties, methods and events.  One such property is 
<code>Children</code> which is used to control the top-to-bottom stacking order.  
MATLAB stacking rules, e.g. controls are always on top of axes, mean that 
some reasonable layout orders may be invalid stacking orders, so a new 
property for layout order is required.</p>

<h4>Auto-parenting</h4>
<p>The new MATLAB graphics system introduces unparented objects, i.e. those with property <code>Parent</code> 
empty.  The new system also introduces a separation between formal class constructors, e.g. 
<code>matlab.ui.container.Panel</code>, and informal construction functions, e.g. <code>uipanel</code>.  
Construction functions are auto-parenting, i.e. if <code>Parent</code> is not specified then it is set to 
<matlabfcn>gcf</matlabfcn>, whereas class constructors return objects with <code>Parent</code> empty unless 
explicitly specified. Version 2 presents a formal interface of class constructors which follow this new 
convention.</p>

<p>Classes in "uiextras" are auto-parenting so the behavior of legacy code is 
unchanged.  However, best practice is to specify parent explicitly during 
construction.</p>

<h4>Defaults mechanism</h4>
<p>Version 1 provided a defaults mechanism (<code>get</code>, <code>set</code> and <code>unset</code> 
in "uiextras") that mimicked <code>get</code> and <code>set</code> in the MATLAB graphics 
system itself.  This feature has been removed from version 2.  Users should use an alternative 
programming pattern, e.g. factory function, to create objects with standard settings.</p>

<h4>Enable and disable</h4>
<p>Version 1 provided a mechanism to enable and disable container contents using 
the property 'Enable'.  This feature has been removed from version 2.  Users 
should enable and disable controls directly rather than via containers.</p>
<p>For more commentary, see <a href="http://goo.gl/j0KmTR">this article</a>.</p>

<h4>Other property name changes</h4>
<p>A number of property names have changed to achieve greater consistency 
across the package.  For example, <code>RowSizes</code> and <code>ColumnSizes</code> in 
uiextras.Grid are now <code>Heights</code> and <code>Widths</code> in uix.Grid.  The package 
"uiextras" provides support for legacy property names.</p>
<ul>
    <li><code>RowSizes</code> in "uiextras" is <code>Heights</code> in "uix"</li>
    <li><code>ColumnSizes</code> in "uiextras" is <code>Widths</code> in "uix"</li>
    <li><code>ShowMarkings</code> in "uiextras" is <code>DividerMarkings</code> in "uix"</li>
</ul>

<h4>Property shape changes</h4>
<p>Version 2 contents companion properties are now of the same size as <code>Contents</code>, 
i.e. column vectors.  In version 1, these properties were row vectors.  The 
package "uiextras" provides support for legacy property values.</p>

    <h4>Tab selection behavior</h4>
        <p>In version 1, after adding a tab to a tab panel, the new tab is selected.</p>
        <p>In version 2, the original selection is preserved, except if the tab panel was 
            empty, in which case the new tab is selected.  This is consistent with the 
        behavior of <matlabfcn>uitabgroup</matlabfcn>.</p>

    </inlinesubsection> 
    
</section>

<!-- ****************************************************************** -->

<section name="Release notes" staticref="releasenotes">
    <para>
        The GUI Layout Toolbox version numbers take the form <code>major.minor.iter</code>. The
        current version you have installed can be checked by typing <matlabfcn>ver</matlabfcn>
        at the MATLAB command prompt.
    </para>
    
    <inlinesubsection name="Version 2.1">
        <ul>
            <li>Released 2 October 2014</li>
            <li>Initial version for MATLAB R2014b</li>
        </ul>
    </inlinesubsection> 
    
</section>


<!-- ****************************************************************** -->
  
<section name="Installation"> 
    <keywords>Uninstall</keywords>
    <para>
        GUI Layout Toolbox is provided as a MATLAB toolbox file (<code>.mltbx</code>).
    </para>
    <para>
        For instructions on installing and uninstalling, see the section on 
        <matlabdoc href="matlab/matlab_prog/manage-toolboxes.html">managing toolboxes</matlabdoc> 
        in the MATLAB documentation.
    </para>
</section>

<!-- ****************************************************************** -->
  
<section name="Support"> 
    <keywords>Help</keywords>
    <p>
        This toolbox is not a MathWorks supported product. However, if you
        have problems, suggestions or other comments, please contact the
        authors:
    </p>
    <ul>
        <li><a href="http://www.mathworks.com/matlabcentral/fileexchange/authors/34325">David Sampson</a></li>
        <li><a href="http://www.mathworks.com/matlabcentral/fileexchange/authors/80363">Ben Tordoff</a></li>
    </ul>
    <p>If you like this toolbox, help others to find it by leaving a rating
        and comment on the <a href="http://www.mathworks.com/matlabcentral/fileexchange/index?term=gui+layout+toolbox">MATLAB Central File Exchange</a>.
    </p>
</section>

<!-- ****************************************************************** -->
  
<section name="Acknowledgements"> 
    <p>The authors wish to acknowledge the earlier contributions of the following MathWorks 
       <a href="http://www.mathworks.com/services/consulting/">consultants</a> to this area:</p>
    <ul>
        <li>Brad Phelan</li>
        <li>Malcolm Wood</li>
        <li>Richard Lang</li>
        <li>Paul Kerr-Delworth</li>
    </ul>
</section>
<!-- ****************************************************************** -->
  
</doc>
